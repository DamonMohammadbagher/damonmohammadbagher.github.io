<html dir="rtl">

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Table of Contents</title>
</head>

<body background="x3.jpeg" dir="ltr">

<table border="0" width="100%" id="table1" cellspacing="0" cellpadding="0">
	<tr>
		<td>
		<table border="0" cellSpacing="0" cellPadding="0" width="100%" id="table3">
			<tr>
				<td>
				<div style="MARGIN-LEFT: 0.05in">
&nbsp;</div>
				</td>
				<td class="v2" vAlign="top" align="right">
				<div style="MARGIN-RIGHT: 0.05in">
					<font face="Arial">&nbsp;</font></div>
				</td>
			</tr>
		</table>
		<table border="0" cellSpacing="2" cellPadding="0" width="100%" id="table4">
			<tr>
				<td vAlign="top" width="100" align="right"><font face="Arial">
				<img border="0" src="xCover_A_bypassingAVSv2.PNG" width="127" height="194"></font></td>
				<td width="2"></td>
				<td vAlign="top" align="left">
				<table border="0" cellSpacing="4" cellPadding="0" width="100%" id="table5">
					<tr>
						<td vAlign="top" colSpan="2" align="left"><b>
						<font face="Arial">Bypassing Anti Viruses by C# 
						Programming v2.0</font></b></td>
					</tr>
					<tr>
						<td vAlign="top" align="left"><b>
						<font face="Arial" size="2">
						<span class="b24-bookauthor">by&nbsp;Damon Mohammadbagher</span></font></b></td>
						<td vAlign="top" align="right"><font face="Arial">
						<span class="b24-bookisbn">&nbsp;</span></font></td>
					</tr>
					<tr>
						<td vAlign="top" colSpan="2" align="left">
						<font face="Arial" size="2">
						<span class="b24-bookcwdate"><b>© 2023 ,</b> </span><b>
						Language: Persian Edition</b></font></td>
					</tr>
					<tr>
						<td vAlign="top" colSpan="2" align="left">
						<p class="b24-bookeditorial"><b>
						<font face="Arial" color="#FF6600" size="2">as Pentester in this 
						book i want to share some of codes for bypassing AVs 
						which originally made by myself or made by others.</font></b></td>
					</tr>
				</table>
				</td>
			</tr>
		</table>
		<table class="b24-tocmenu" border="0" cellSpacing="2" cellPadding="0" xmlns:dc="http://purl.org/dc/elements/1.0/" id="table6">
		</table>
		<table border="0" cellSpacing="0" cellPadding="2" width="462" xmlns:dc="http://purl.org/dc/elements/1.0/" id="table7">
			<tr class="b24-toctitle">
				<td>&nbsp;</td>
			</tr>
			<tr class="b24-toctitle">
				<td><font face="Arial"><b>Table of Contents </b></font></td>
			</tr>
		</table>
		</td>
		<td width="632">&nbsp;</td>
	</tr>
	<tr>
		<td height="518" valign="top">
		<table border="0" cellSpacing="0" cellPadding="2" width="680" xmlns:dc="http://purl.org/dc/elements/1.0/" id="table8">
			<tr>
				<td class="b24-toc1" width="14%" colSpan="3">&nbsp;</td>
			</tr>
			<tr>
				<td vAlign="center" width="1%"><font face="Arial">
				<img border="0" alt="" width="1" height="1"></font></td>
				<td class="b24-toc1" width="99%" colSpan="3">&nbsp;</td>
			</tr>
			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""  width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 1</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">
				-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">Encryption &amp; 
				Decryption for Payloads</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%201/Chapter1.htm"><font color="#000080">
					<span style="text-decoration: none">1.1 Simple Method for 
					Execute Native Code in Memory via API Programming</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" color="#808080" style="font-size: 9pt">
					CreateThread/WriteProcessMemory/VirtualAlloc etc.</font></b></li>
				</ul>
					</li>
					<li><b><font face="Tahoma" size="2" color="#000080">
					<span style="text-decoration: none"><font color="#000080">
					<a href="Chapter%201/Chapter1.2.htm">
					<span style="text-decoration: none"><font color="#000080">
					1.2 Encryption and Decryption for payloads via RC4</font></span></a></font></span></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					RC4 Encryption by C# &amp; metasploit payloads.</font></b></li>
				</ul>
					</li>
					<li><b><font face="Tahoma" size="2" color="#000080">
					<a href="Chapter%201/Chapter1.3.htm">
					<span style="text-decoration: none"><font color="#000080">
					1.3 Encryption and Decryption for Payload of Suspended 
					Thread via XOR</font></span></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about Xor Encryption by C# &amp; </font></b>
					<b style="margin: 0">
					<font color="#808080" style="font-size: 9pt; margin: 0" face="Tahoma">
					VirtualAllocExNuma</font></b><b><font face="Tahoma" style="font-size: 9pt" color="#808080"> 
					, VirtualAlloc2 and decryption in-memory for threads + 
					metasploit payloads.</font></b></li>
				</ul>
					</li>
				</ul>
				</td>
			</tr>
			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 2</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">
				-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">Executing Native Codes in Local Process</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b style="margin: 0">
					<font color="#000080" face="Tahoma" size="2" style="margin: 0">
					<a href="Chapter%202/Chapter2.1.htm">
					<span style="text-decoration: none"><font color="#000080">2.1 Local Thread Injection Classic Method and Indirect/Direct Technique D</font></span></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about Marshal methods in C# like </font></b>
					<b style="margin: 0">
					<font color="#808080" style="font-size: 9pt; margin: 0" face="Tahoma">
					Marshal.GetDelegateForFunctionPointer and invoking C# codes 
					in-memory via new method called &quot;Technique D&quot;, bypassing 
					kaspersky with last updates &amp; windows defender</font></b></li>
				</ul></li>
					<li><b><font face="Tahoma" size="2" color="#000080">
					<span style="text-decoration: none">
					<a href="Chapter%202/Chapter2.2.htm">
					<span style="text-decoration: none"><font color="#000080">2</font></span></a></span></font></b><a href="Chapter%202/Chapter2.2.htm"><b style="margin: 0"><font color="#000080" face="Tahoma" size="2" style="margin: 0"><span style="text-decoration: none">.2
					</span></font></b>
					<font face="Tahoma" size="2" color="#000080"><b>
					<span style="text-decoration: none">QueueUserAPC API Methods and Indirect/Direct Technique D</span></b></font></a><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about some windows Apis like QueueUserAPC + 
					Technique D </font></b></li>
				</ul></li>
					<li><a href="Chapter%202/Chapter2.3.htm"><b>
					<font face="Tahoma" size="2" color="#000080">
					<span style="text-decoration: none">2</span></font></b><font color="#000080" face="Tahoma" size="2" style="margin: 0"><span style="text-decoration: none"><b style="margin: 0">.3 
					QueueUserAPC Classic Method</b></span></font></a><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about classic QueueUserAPC in remote process &amp; 
					Windows API Monitor tool + </font></b><b style="margin: 0">
					<font face="Tahoma" style="font-size: 9pt; margin: 0" color="#808080">
					NtQueueAPCThread<span lang="fa" style="margin: 0"> </span>
					</font></b></li>
				</ul></li>
				</ul>
				</td>
			</tr>

			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 3</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">
				-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">Executing Native Codes in Local Process 
				(Part2)</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b style="margin: 0">
					<font color="#000080" face="Tahoma" size="2" style="margin: 0">
					<a href="Chapter%203/Chapter3.1.htm">
					<span style="text-decoration: none"><font color="#000080">3.1 Simple Method for 
					Execute Native Code in Memory + JMP Method 1</font></span></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about Jump OpCode 0xE9 + jumping between payloads 
					in-memory sections and bypassing windows defender</font></b></li>
				</ul></li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%203/Chapter3.2.htm"><font color="#000080">
					<span style="text-decoration: none">3.2 Simple Method for Execute Native Code in Memory + Delegate Method + JMP Method 1
					</span></font></a></font></b>
				<ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about Jump OpCode 0xE9 + jumping between payloads 
					in-memory sections + using C# Delegate Tricks instead using 
					CreateThread Api + memory Protection modes and bypassing 
					windows defender</font></b></li>
				</ul></li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%203/Chapter3.3.htm"><font color="#000080">
					<span style="text-decoration: none">3.3 Simple Method for Execute Native Code in Memory + Delegate Method + JMP Method 1 [Part2]
					</span></font></a></font></b>
				<ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about Jump OpCode 0xE9 + jumping between payloads 
					in-memory sections + using C# Delegate Tricks instead using 
					CreateThread Api + marshal.writebyte and bypassing windows 
					defender</font></b></li>
				</ul></li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%203/Chapter3.4.htm"><font color="#000080">
					<span style="text-decoration: none">3.4 Indirect Call C# Methods in Memory via Reflection.Emit Jump Method
					</span></font></a></font></b>
				<ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about new method to indirect call C# codes via 
					reflection.emit class + new jump method via Emit &amp; opcode.jmp 
					+ bypassing windows defender </font></b></li>
				</ul></li>
					<li><b><font face="Tahoma" size="2" color="#000080">
					<a href="Chapter%203/Chapter3.5.htm"><font color="#000080">
					<span style="text-decoration: none">3.5 Running C# Managed 
					Codes in Memory via CreateThread API</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about 
					call C# method via CreateThread API directly without calling 
					c# methods in code 
					+ bypassing windows defender </font></b></li>
				</ul></li>
				</ul>
				</td>
			</tr>
			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 4</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">Executing Native Codes in Local Process (Part3)</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b><font face="Tahoma" size="2" color="#000080">
					<a href="Chapter%204/Chapter4.1.htm"><font color="#000080">
					<span style="text-decoration: none">4.1 New 
					Approach with New APIs to Execute Payloads in Memory + Async 
					Method and Bypassing Kaspersky</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Using New APIs instead old APIs with simple Async C# Method 
					and Bypassing Kaspersky</font></b></li>
				</ul>
					</li>
					<li><b><a href="Chapter%204/Chapter4.2.htm"><font face="Tahoma" size="2" color="#000080">
					<span style="text-decoration: none">4.2 
					Indirect Invoke C# Delegate + JMP Method 2</span></font></a></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					New Jump Method + Indirect Invoke C# Delegate and bypassing 
					Kaspersky</font></b></li>
				</ul></li>
					<li><b><font face="Tahoma" size="2" color="#000080">
					<a href="Chapter%204/Chapter4.3.htm"><font color="#000080">
					<span style="text-decoration: none">4.3 
					Chunking CobaltStrike Payloads + Jump Method and Bypassing Kaspersky</span></font></a></font>
					</b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Chunking Payload Method in-memory and bypassing Kaspersky</font></b></li>
				</ul></li>
				</ul>
				</td>
			</tr>
			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 5</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">Executing Native Code in Remote Process</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<span style="text-decoration: none">
					<a href="Chapter%205/Chapter5.1.htm"><font color="#000080">
					<span style="text-decoration: none">5.1 Remote Thread Injection (Classic)</span></font></a></span></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Old Remote Injection Method (classic method)</font></b></li>
				</ul></li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<span style="text-decoration: none"><font color="#000080">
					<a href="Chapter%205/Chapter5.2.htm"><font color="#000080">
					<span style="text-decoration: none">5.2</span></font></a></font></span></font></b><b><a href="Chapter%205/Chapter5.2.htm"><font face="Tahoma" size="2" color="#000080"><font color="#000080"><span style="text-decoration: none"> 
					Remote Thread Injection + Delegate Method </span> </font>
					<span style="text-decoration: none">
					<span style="">and </span>bypassing Defender</span></font></a></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Remote Injection + C# Delegate Method and Bypassing Windows 
					Defender without Importing CreateRemoteThread or 
					VirtualAllocEx APIs etc</font></b></li>
				</ul></li>
					<li><b><font face="Tahoma" size="2" color="#000080">
					<span style="text-decoration: none"><font color="#000080">
					<a href="Chapter%205/Chapter5.3.htm"><font color="#000080">
					<span style="text-decoration: none">5.3 Remote Thread Injection 
					+ Jump Method and Bypassing Kaspersky + Defender</span></font></a></font></span></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					New Method for Remote Injection + Jump Method, Importing 
					CreateRemoteThread API and bypass AVs like Kaspersky + 
					windows Defender</font></b></li>
				</ul></li>
				</ul>
				</td>
			</tr>

<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 6</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">[X technique] via 
				Extension Methods in C#</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%206/Chapter6.1.htm"><font color="#000080">
					<span style="text-decoration: none">6.1 X Technique, Changing Codes via Extension Method</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					New Method for changing source code without changing result 
					of code by C# eXtensions</font></b></li>
				</ul></li>
				</ul>
				</td>
			</tr>

			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 7</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">Sliver C2 and your Csharp Codes</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b style="margin: 0">
					<font color="#000080" face="Tahoma" size="2" style="margin: 0">
					<a href="Chapter%207/Chapter7.1.htm"><font color="#000080">
					<span style="text-decoration: none">7.1 When Sliver C2 Payloads is Good to Use , When is not?</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about New C2 Server Sliver-c2 and two examples for 
					C#</font></b></li>
				</ul>
					</li>
					<li><b style="margin: 0">
					<font color="#000080" face="Tahoma" size="2" style="margin: 0">
					<a href="Chapter%207/Chapter7.2.htm">
					<span style="text-decoration: none"><font color="#000080">7.2 Sliver-C2 Beacon with mTLS Payloads</font></span></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Using Beacons mode via Sliver-C2 payloads and mtls traffic + C#</font></b></li>
				</ul>
					</li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%207/Chapter7.3.htm"><font color="#000080">
					<span style="text-decoration: none">7.3 Sliver-C2 Beacon with Https Payloads</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Using Beacons mode via Sliver-C2 payloads and https traffic 
					+ C#</font></b></li>
				</ul>
					</li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%207/Chapter7.4.htm"><font color="#000080">
					<span style="text-decoration: none">7.4 Using Resource for Hardcoding Big Sliver-C2 Payloads</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Hardcoding Payloads in Csharp via Resources</font></b></li>
				</ul>
					</li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%207/Chapter7.5.htm"><font color="#000080">
					<span style="text-decoration: none">7.5 C# Code for Encrypting Sliver-C2 Bin Files</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about Xor method for encrypting C2 Payload files
					</font></b></li>
				</ul>
					</li>
					<li><b><font face="Tahoma" size="2" color="#000080">
					<a href="Chapter%207/Chapter7.6.htm">
					<span style="text-decoration: none"><font color="#000080">7.6 Beacon Connections and Active Connections in Sliver-C2</font></span></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking about Beacon Mode Connections and Interactive 
					Connections</font></b></li>
				</ul>
					</li>
					<li><b><a href="Chapter%207/Chapter7.7.htm"><font face="Tahoma" size="2" color="#000080">
					<span style="text-decoration: none">7.7 Bypassing ETW and Execute .NET Assembly Codes</span></font></a></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Talking About Bypassing ETW/AMSI and Execute .NET Codes Inside Target Process</font></b></li>
				</ul>
					</li>
				</ul>
				</td>
			</tr>

	<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 8</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">Native CallBack Functions by C#</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%208/Chapter8.1.htm"><font color="#000080">
					<span style="text-decoration: none">8.1 Native CallBack Functions by C#</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Windows Callback Function in C# and Async Call C# Methods via Callback Functions</font></b></li>
				</ul>
					</li>
				</ul>
				</td>
			</tr>

			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 9</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">
				Compiling and Running Managed Codes In-Memory by C#</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%209/Chapter9.1.htm">
					<span style="text-decoration: none"><font color="#000080">
					9.1 Running C# Managed Codes In-Memory by C#</font></span></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Running C# Assemblies/Exe Inside Another Managed Process by C#
					</font></b></li>
				</ul>
					</li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%209/Chapter9.2.htm">
					<span style="text-decoration: none"><font color="#000080">9.2 Running C# Managed Codes In-Memory by C# , Part2</font></span></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Running C# Assemblies/Exe Inside Another Managed Process + 
					Encrypting Exe Files over http Traffic
					</font></b></li>
				</ul>
					</li>
					<li><b><font face="Tahoma" size="2" color="#000080">
					<a href="Chapter%209/Chapter9.3.htm"><font color="#000080">
					<span style="text-decoration: none">9.3 Compiling C# Source Codes In-Memory by C#</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Compiling/Running C# Source Codes Inside Another Managed 
					Process
					</font></b></li>
				</ul>
					</li>
				</ul>
				</td>
			</tr>
			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 10</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">
				Detecting Memory Allocation in-memory via ETW Events (Blue team)</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%2010/Chapter10.1.htm"><font color="#000080">
					<span style="text-decoration: none">10.1 ETW and VirtualMemAlloc Events</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Payload Detection via ETW VirtualMemAlloc Events, using 
					ETWProcessMon.cs + VirtualMemAllocMon.cs codes </font></b></li>
				</ul>
					</li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%2010/Chapter10.2.htm"><font color="#000080">
					<span style="text-decoration: none">10.2 ETW and VirtualMemAlloc Events , Part2</span></font></a></font></b><ul>
					<li><b>
					<font face="Tahoma" style="font-size: 9pt" color="#808080">
					Payload Detection via ETW VirtualMemAlloc Events, using 
					ETWProcessMon.cs + VirtualMemAllocMon.cs codes </font></b></li>
				</ul>
					</li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%2010/Chapter10.3.htm">
					<font color="#000080"><span style="text-decoration: none">
					10.3 ETW and VirtualMemAlloc Events , Part3</span></font></a></font></b><ul>
						<li><b>
						<font face="Tahoma" style="font-size: 9pt" color="#808080">Payload Detection via ETW VirtualMemAlloc Events, Step by step using 
						VirtualMemAllocMon.cs codes</font></b>
						</li>
					</ul></li>
				</ul>
				</td>
			</tr>
			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
				<td class="b24-toc1" width="9%" noWrap valign="top" rowspan="2"><b>
				<font face="Arial" size="2" color="#666633">
				<span style="text-decoration: none">Chapter 11</span></font></b></td>
				<td width="1%" align="middle" rowspan="2"><font face="Arial" size="2">-</font></td>
				<td width="84%" style="border-top-style: solid; border-top-width: 1px"><b><font face="Arial" size="2">Detecting Threats in-memory via other ETW Events (Blue team)</font></b></td>
			</tr>
			<tr>
				<td width="84%" style="border-bottom-style: solid; border-bottom-width: 1px">
				<ul>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%2011/Chapter11.1.htm"><font color="#000080">
					<span style="text-decoration: none">11.1 ETW ImageLoads and TCPIP Events for Detecting Threats In-Memory</span></font></a></font></b><ul>
						<li><b>
						<font face="Tahoma" style="font-size: 9pt" color="#808080">
						Using ETW DLL Loads Event or ImageLoads Events + TCPIP Send Events to Detect Threats</font></b>
						</li>
					</ul></li>
					<li><b style="margin: 0">
					<font face="Tahoma" size="2" color="#000080" style="margin: 0">
					<a href="Chapter%2011/Chapter11.2.htm"><font color="#000080">
					<span style="text-decoration: none">11.2 Detecting Remote Thread Injection and Monitoring Windows Events Log by C#</span></font></a></font></b><ul>
						<li><b>
						<font face="Tahoma" style="font-size: 9pt" color="#808080">Remote Thread Injection Detection in-memory + Creating Windows Event Logs and Monitoring them</font></b>
						</li>
					</ul></li>
				</ul>
				</td>
			</tr>
			<tr>
				<td vAlign="center" width="1%"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
			</tr>
			<tr>
				<td vAlign="center" width="1%"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
			</tr>
			<tr>
				<td vAlign="center" width="1%"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
			</tr>
			<tr>
				<td vAlign="center" width="1%"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
			</tr>
			<tr>
				<td vAlign="center" width="1%"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
			</tr>
			<tr>
				<td vAlign="center" width="1%"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
			</tr>
			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
			</tr>
			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
			</tr>
			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
			</tr>
			<tr>
				<td vAlign="center" width="1%" rowspan="2"><font face="Arial">
				<img border="0" alt=""   width="1" height="1"></font></td>
			</tr>
			</table>
		</td>
		<td width="632" height="518">&nbsp;</td>
	</tr>
</table>

<p>&nbsp;</p>

</body>

</html>